name: Deploy to ECR

on:
 
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: api
        IMAGE_TAG: api_image
      run: |
        docker build -f ./src/WebApi/Dockerfile ./src -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY_SSH }}
        port: ${{ secrets.PORT }}
        script: |
                docker stop $(docker ps -a -q)
                docker rm $(docker ps -a -q)
                docker rmi -f $(docker images -aq)
                aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 400768006621.dkr.ecr.sa-east-1.amazonaws.com
                docker pull 400768006621.dkr.ecr.sa-east-1.amazonaws.com/api:api_image
                docker run -dp 8010:80 -p 8090:443 400768006621.dkr.ecr.sa-east-1.amazonaws.com/api:api_image